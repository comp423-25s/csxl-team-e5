"""add chat_suggested_courses table

Revision ID: 0e06986b4d77
Revises: 0e1b7d0ecf4f
Create Date: 2025-04-27 21:20:07.099025

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0e06986b4d77'
down_revision = '0e1b7d0ecf4f'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('academics__course',
    sa.Column('id', sa.String(length=9), nullable=False),
    sa.Column('subject_code', sa.String(length=4), nullable=False),
    sa.Column('number', sa.String(length=4), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('credit_hours', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('academics__hiring__level',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('salary', sa.Float(), nullable=False),
    sa.Column('load', sa.Float(), nullable=False),
    sa.Column('classification', sa.Enum('IOR', 'PHD', 'MS', 'UG', name='hiringlevelclassification'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('academics__term',
    sa.Column('id', sa.String(length=6), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('applications_open', sa.DateTime(), nullable=True),
    sa.Column('applications_close', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coworking__operating_hours',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('coworking__operating_hours_idx', 'coworking__operating_hours', ['start', 'end'], unique=False)
    op.create_index(op.f('ix_coworking__operating_hours_end'), 'coworking__operating_hours', ['end'], unique=False)
    op.create_index(op.f('ix_coworking__operating_hours_start'), 'coworking__operating_hours', ['start'], unique=False)
    op.create_table('office_hours_recurrence_pattern',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('recur_monday', sa.Boolean(), nullable=False),
    sa.Column('recur_tuesday', sa.Boolean(), nullable=False),
    sa.Column('recur_wednesday', sa.Boolean(), nullable=False),
    sa.Column('recur_thursday', sa.Boolean(), nullable=False),
    sa.Column('recur_friday', sa.Boolean(), nullable=False),
    sa.Column('recur_saturday', sa.Boolean(), nullable=False),
    sa.Column('recur_sunday', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('shorthand', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('logo', sa.String(), nullable=False),
    sa.Column('short_description', sa.String(), nullable=False),
    sa.Column('long_description', sa.String(), nullable=False),
    sa.Column('website', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('instagram', sa.String(), nullable=False),
    sa.Column('linked_in', sa.String(), nullable=False),
    sa.Column('youtube', sa.String(), nullable=False),
    sa.Column('heel_life', sa.String(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('room',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('building', sa.String(), nullable=False),
    sa.Column('room', sa.String(), nullable=False),
    sa.Column('nickname', sa.String(), nullable=False),
    sa.Column('reservable', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_room_capacity'), 'room', ['capacity'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pid', sa.Integer(), nullable=False),
    sa.Column('onyen', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(length=32), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=False),
    sa.Column('last_name', sa.String(length=64), nullable=False),
    sa.Column('pronouns', sa.String(length=32), nullable=False),
    sa.Column('github', sa.String(length=32), nullable=False),
    sa.Column('github_id', sa.Integer(), nullable=True),
    sa.Column('github_avatar', sa.String(), nullable=True),
    sa.Column('accepted_community_agreement', sa.Boolean(), nullable=False),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('linkedin', sa.String(), nullable=True),
    sa.Column('website', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_onyen'), 'user', ['onyen'], unique=True)
    op.create_index(op.f('ix_user_pid'), 'user', ['pid'], unique=True)
    op.create_table('application',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('term_id', sa.String(length=6), nullable=False),
    sa.Column('academic_hours', sa.Integer(), nullable=True),
    sa.Column('extracurriculars', sa.String(), nullable=True),
    sa.Column('expected_graduation', sa.String(), nullable=True),
    sa.Column('program_pursued', sa.String(), nullable=True),
    sa.Column('other_programs', sa.String(), nullable=True),
    sa.Column('gpa', sa.Float(), nullable=True),
    sa.Column('comp_gpa', sa.Float(), nullable=True),
    sa.Column('comp_227', sa.Enum('COMPENSATION', 'CREDIT', 'EITHER', name='comp227'), nullable=True),
    sa.Column('intro_video_url', sa.String(), nullable=True),
    sa.Column('prior_experience', sa.String(), nullable=True),
    sa.Column('service_experience', sa.String(), nullable=True),
    sa.Column('additional_experience', sa.String(), nullable=True),
    sa.Column('ta_experience', sa.String(), nullable=True),
    sa.Column('best_moment', sa.String(), nullable=True),
    sa.Column('desired_improvement', sa.String(), nullable=True),
    sa.Column('advisor', sa.String(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['term_id'], ['academics__term.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('article',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('slug', sa.String(), nullable=False),
    sa.Column('state', sa.Enum('DRAFT', 'PUBLISHED', 'ARCHIVED', name='articlestate'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('synopsis', sa.String(), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.Column('published', sa.DateTime(), nullable=False),
    sa.Column('last_modified', sa.DateTime(), nullable=True),
    sa.Column('is_announcement', sa.Boolean(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('chat_session',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_session_id'), 'chat_session', ['id'], unique=False)
    op.create_index(op.f('ix_chat_session_user_id'), 'chat_session', ['user_id'], unique=False)
    op.create_table('course_site',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('term_id', sa.String(length=6), nullable=False),
    sa.ForeignKeyConstraint(['term_id'], ['academics__term.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('coworking__reservation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('walkin', sa.Boolean(), nullable=False),
    sa.Column('room_id', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('coworking__reservation_time_idx', 'coworking__reservation', ['start', 'end', 'state'], unique=False)
    op.create_table('coworking__seat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('shorthand', sa.String(), nullable=False),
    sa.Column('reservable', sa.Boolean(), nullable=False),
    sa.Column('has_monitor', sa.Boolean(), nullable=False),
    sa.Column('sit_stand', sa.Boolean(), nullable=False),
    sa.Column('x', sa.Integer(), nullable=False),
    sa.Column('y', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('event',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('public', sa.Boolean(), nullable=False),
    sa.Column('registration_limit', sa.Integer(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('override_registration_url', sa.String(), nullable=True),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_role',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('academics__hiring__application_review',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.Column('course_site_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('NOT_PREFERRED', 'NOT_PROCESSED', 'PREFERRED', name='applicationreviewstatus'), nullable=False),
    sa.Column('preference', sa.Integer(), nullable=False),
    sa.Column('notes', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.ForeignKeyConstraint(['course_site_id'], ['course_site.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('academics__hiring__application_review_course_idx', 'academics__hiring__application_review', ['course_site_id', 'status', 'preference'], unique=False)
    op.create_table('academics__section',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('course_id', sa.String(length=9), nullable=False),
    sa.Column('number', sa.String(), nullable=False),
    sa.Column('term_id', sa.String(length=6), nullable=False),
    sa.Column('meeting_pattern', sa.String(), nullable=False),
    sa.Column('override_title', sa.String(), nullable=False),
    sa.Column('override_description', sa.String(), nullable=False),
    sa.Column('course_site_id', sa.Integer(), nullable=True),
    sa.Column('enrolled', sa.Integer(), nullable=False),
    sa.Column('total_seats', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['academics__course.id'], ),
    sa.ForeignKeyConstraint(['course_site_id'], ['course_site.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['academics__term.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_academics__section__by_course', 'academics__section', ['course_id', 'term_id'], unique=False)
    op.create_index('ix_academics__section__by_term', 'academics__section', ['term_id', 'course_id'], unique=False)
    op.create_table('article_author',
    sa.Column('article_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['article.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('article_id', 'user_id')
    )
    op.create_table('chat_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['chat_session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_history_id'), 'chat_history', ['id'], unique=False)
    op.create_index(op.f('ix_chat_history_session_id'), 'chat_history', ['session_id'], unique=False)
    op.create_table('coworking__reservation_seat',
    sa.Column('reservation_id', sa.Integer(), nullable=False),
    sa.Column('seat_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reservation_id'], ['coworking__reservation.id'], ),
    sa.ForeignKeyConstraint(['seat_id'], ['coworking__seat.id'], ),
    sa.PrimaryKeyConstraint('reservation_id', 'seat_id')
    )
    op.create_table('coworking__reservation_user',
    sa.Column('reservation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reservation_id'], ['coworking__reservation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('reservation_id', 'user_id')
    )
    op.create_table('event_registration',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('registration_type', sa.Enum('ATTENDEE', 'ORGANIZER', name='registrationtype'), nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['event.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('event_id', 'user_id')
    )
    op.create_table('office_hours',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.Enum('OFFICE_HOURS', 'TUTORING', 'REVIEW_SESSION', name='office_hours__event__type'), nullable=False),
    sa.Column('mode', sa.Enum('IN_PERSON', 'VIRTUAL_STUDENT_LINK', 'VIRTUAL_OUR_LINK', name='office_hours__event__mode'), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('location_description', sa.String(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('course_site_id', sa.Integer(), nullable=False),
    sa.Column('recurrence_pattern_id', sa.Integer(), nullable=True),
    sa.Column('room_id', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['course_site_id'], ['course_site.id'], ),
    sa.ForeignKeyConstraint(['recurrence_pattern_id'], ['office_hours_recurrence_pattern.id'], ),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('academics__hiring__assignment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('term_id', sa.String(length=6), nullable=False),
    sa.Column('course_site_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('application_review_id', sa.Integer(), nullable=True),
    sa.Column('hiring_level_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'COMMIT', 'FINAL', name='hiringassignmentstatus'), nullable=False),
    sa.Column('position_number', sa.String(), nullable=True),
    sa.Column('epar', sa.String(), nullable=True),
    sa.Column('i9', sa.Boolean(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=False),
    sa.Column('modified', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['application_review_id'], ['academics__hiring__application_review.id'], ),
    sa.ForeignKeyConstraint(['course_site_id'], ['course_site.id'], ),
    sa.ForeignKeyConstraint(['hiring_level_id'], ['academics__hiring__level.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['academics__term.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('academics__hiring_application_review_idx', 'academics__hiring__assignment', ['application_review_id'], unique=False)
    op.create_index('academics__hiring_course_site_idx', 'academics__hiring__assignment', ['course_site_id'], unique=False)
    op.create_index('academics__hiring_term_idx', 'academics__hiring__assignment', ['term_id', 'hiring_level_id'], unique=False)
    op.create_index('academics__hiring_user_idx', 'academics__hiring__assignment', ['user_id'], unique=False)
    op.create_table('academics__section_room',
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('room_id', sa.String(), nullable=False),
    sa.Column('assignment_type', sa.Enum('LECTURE_ROOM', 'OFFICE_HOURS', name='roomassignmenttype'), nullable=False),
    sa.ForeignKeyConstraint(['room_id'], ['room.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['academics__section.id'], ),
    sa.PrimaryKeyConstraint('section_id', 'room_id')
    )
    op.create_table('academics__user_section',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('member_role', sa.Enum('STUDENT', 'UTA', 'GTA', 'INSTRUCTOR', name='rosterrole'), nullable=False),
    sa.ForeignKeyConstraint(['section_id'], ['academics__section.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_academics__user_section__by_section', 'academics__user_section', ['section_id', 'member_role'], unique=False)
    op.create_index('ix_academics__user_section__by_user', 'academics__user_section', ['user_id', 'section_id'], unique=True)
    op.create_table('section_application',
    sa.Column('preference', sa.Integer(), nullable=True),
    sa.Column('section_id', sa.Integer(), nullable=False),
    sa.Column('application_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['application_id'], ['application.id'], ),
    sa.ForeignKeyConstraint(['section_id'], ['academics__section.id'], ),
    sa.PrimaryKeyConstraint('section_id', 'application_id')
    )
    op.create_table('office_hours__ticket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('type', sa.Enum('CONCEPTUAL_HELP', 'ASSIGNMENT_HELP', name='tickettype'), nullable=False),
    sa.Column('state', sa.Enum('QUEUED', 'CALLED', 'CLOSED', 'CANCELED', name='ticketstate'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('called_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('have_concerns', sa.Boolean(), nullable=False),
    sa.Column('caller_notes', sa.String(), nullable=False),
    sa.Column('office_hours_id', sa.Integer(), nullable=False),
    sa.Column('caller_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['caller_id'], ['academics__user_section.id'], ),
    sa.ForeignKeyConstraint(['office_hours_id'], ['office_hours.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('office_hours__user_created_ticket',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['member_id'], ['academics__user_section.id'], ),
    sa.ForeignKeyConstraint(['ticket_id'], ['office_hours__ticket.id'], ),
    sa.PrimaryKeyConstraint('ticket_id', 'member_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('office_hours__user_created_ticket')
    op.drop_table('office_hours__ticket')
    op.drop_table('section_application')
    op.drop_index('ix_academics__user_section__by_user', table_name='academics__user_section')
    op.drop_index('ix_academics__user_section__by_section', table_name='academics__user_section')
    op.drop_table('academics__user_section')
    op.drop_table('academics__section_room')
    op.drop_index('academics__hiring_user_idx', table_name='academics__hiring__assignment')
    op.drop_index('academics__hiring_term_idx', table_name='academics__hiring__assignment')
    op.drop_index('academics__hiring_course_site_idx', table_name='academics__hiring__assignment')
    op.drop_index('academics__hiring_application_review_idx', table_name='academics__hiring__assignment')
    op.drop_table('academics__hiring__assignment')
    op.drop_table('office_hours')
    op.drop_table('event_registration')
    op.drop_table('coworking__reservation_user')
    op.drop_table('coworking__reservation_seat')
    op.drop_index(op.f('ix_chat_history_session_id'), table_name='chat_history')
    op.drop_index(op.f('ix_chat_history_id'), table_name='chat_history')
    op.drop_table('chat_history')
    op.drop_table('article_author')
    op.drop_index('ix_academics__section__by_term', table_name='academics__section')
    op.drop_index('ix_academics__section__by_course', table_name='academics__section')
    op.drop_table('academics__section')
    op.drop_index('academics__hiring__application_review_course_idx', table_name='academics__hiring__application_review')
    op.drop_table('academics__hiring__application_review')
    op.drop_table('user_role')
    op.drop_table('permission')
    op.drop_table('event')
    op.drop_table('coworking__seat')
    op.drop_index('coworking__reservation_time_idx', table_name='coworking__reservation')
    op.drop_table('coworking__reservation')
    op.drop_table('course_site')
    op.drop_index(op.f('ix_chat_session_user_id'), table_name='chat_session')
    op.drop_index(op.f('ix_chat_session_id'), table_name='chat_session')
    op.drop_table('chat_session')
    op.drop_table('article')
    op.drop_table('application')
    op.drop_index(op.f('ix_user_pid'), table_name='user')
    op.drop_index(op.f('ix_user_onyen'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_room_capacity'), table_name='room')
    op.drop_table('room')
    op.drop_table('role')
    op.drop_table('organization')
    op.drop_table('office_hours_recurrence_pattern')
    op.drop_index(op.f('ix_coworking__operating_hours_start'), table_name='coworking__operating_hours')
    op.drop_index(op.f('ix_coworking__operating_hours_end'), table_name='coworking__operating_hours')
    op.drop_index('coworking__operating_hours_idx', table_name='coworking__operating_hours')
    op.drop_table('coworking__operating_hours')
    op.drop_table('academics__term')
    op.drop_table('academics__hiring__level')
    op.drop_table('academics__course')
    # ### end Alembic commands ###
